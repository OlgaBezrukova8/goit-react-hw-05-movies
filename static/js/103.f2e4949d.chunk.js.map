{"version":3,"file":"static/js/103.f2e4949d.chunk.js","mappings":"wOAAaA,EAAc,SAAC,GAC1B,OADwC,EAAZC,MACfC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,EADM,GAMlB,ECOD,EAXoB,WAClB,IAAMG,ECA6B,WACnC,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOD,EAAP,KAAgBE,EAAhB,KAGML,GADSM,EAAAA,EAAAA,MACGC,QAMlB,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAsBT,GAAIU,KAAKL,EAChC,GAAE,CAACL,IAEGG,CACR,CDXiBQ,GAGhB,OACE,0BACE,wBAAKR,EAAQS,OAAS,GAAI,SAACf,EAAD,CAAaC,MAAOK,IAJpC,+CAOf,C,4MEVKU,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAsB,mCAAG,oGACbD,IAAAA,IAAA,sCAAyCD,IAD5B,cAC9BG,EAD8B,yBAE7BA,EAASC,MAFoB,2CAAH,qDAKtBC,EAAoB,mCAAG,WAAMC,GAAN,uFACXL,IAAAA,IAAA,gCACID,EADJ,iCACoCM,EADpC,YADW,cAC5BH,EAD4B,yBAI3BA,EAASC,KAAKG,SAJa,2CAAH,sDAOpBC,EAAqB,mCAAG,WAAMrB,GAAN,uFACZc,IAAAA,IAAA,iBACXd,EADW,oBACGa,EADH,oBADY,cAC7BG,EAD6B,yBAI5BA,EAASC,MAJmB,2CAAH,sDAOrBK,EAAqB,mCAAG,WAAMtB,GAAN,uFACZc,IAAAA,IAAA,iBACXd,EADW,4BACWa,EADX,oBADY,cAC7BG,EAD6B,yBAI5BA,EAASC,KAAKM,MAJc,2CAAH,sDAOrBd,EAAqB,mCAAG,WAAMT,GAAN,uFACZc,IAAAA,IAAA,iBACXd,EADW,4BACWa,EADX,oBADY,cAC7BG,EAD6B,yBAI5BA,EAASC,KAAKG,SAJc,2CAAH,qD","sources":["components/Reviews/ReviewsList/ReviewsList.jsx","pages/ReviewsPage/ReviewsPage.jsx","hooks/useFetchMoviesReviews.js","servises/fetchApiMovies.js"],"sourcesContent":["export const ReviewsList = ({ array }) => {\n  return array.map(({ id, author, content }) => (\n    <li key={id}>\n      <p>{author}</p>\n      <p>{content}</p>\n    </li>\n  ));\n};\n","import { useFetchMoviesReviews } from '../../hooks/useFetchMoviesReviews';\nimport { ReviewsList } from '../../components/Reviews/ReviewsList/ReviewsList';\n\nconst ReviewsPage = () => {\n  const reviews = useFetchMoviesReviews();\n  const error = \"We don't have any reviews for this movie.\";\n\n  return (\n    <div>\n      <ul>{reviews.length > 0 ? <ReviewsList array={reviews} /> : error}</ul>\n    </div>\n  );\n};\n\nexport default ReviewsPage;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchApiMoviesReviews } from '../servises/fetchApiMovies';\n\nexport const useFetchMoviesReviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const params = useParams();\n  const id = params.movieId;\n\n  useEffect(() => {\n    fetchApiMoviesReviews(id).then(setReviews);\n  }, [id]);\n\n  return reviews;\n};\n","import axios from 'axios';\n\nconst API_KEY = 'efb495fff3706abe3c98fcab5615ca8d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchApiTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchApiSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`\n  );\n  return response.data.results;\n};\n\nexport const fetchApiMoviesDetails = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchApiMoviesCredits = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchApiMoviesReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["ReviewsList","array","map","id","author","content","reviews","useState","setReviews","useParams","movieId","useEffect","fetchApiMoviesReviews","then","useFetchMoviesReviews","length","API_KEY","axios","fetchApiTrendingMovies","response","data","fetchApiSearchMovies","query","results","fetchApiMoviesDetails","fetchApiMoviesCredits","cast"],"sourceRoot":""}