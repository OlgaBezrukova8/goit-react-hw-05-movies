{"version":3,"file":"static/js/757.5c91f9ae.chunk.js","mappings":"gPAEaA,EAAe,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,IAAKC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACzD,OACE,4BACE,0BACE,gBAAKC,IAAKL,EAAKM,IAAKL,OAGtB,wBAAKA,KAEL,iCAASC,MAET,sCACA,uBAAIC,KAEJ,oCACA,uBAAIC,MAGT,ECgCD,EAxCyB,WAAO,IAAD,EACvBG,ECTsB,WAC5B,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOD,EAAP,KAAcE,EAAd,KAGMC,GADSC,EAAAA,EAAAA,MACGC,QAMlB,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAsBJ,GAAIK,KAAKN,EAChC,GAAE,CAACC,IAEGH,CACR,CDFeS,GACNJ,GAAYD,EAAAA,EAAAA,MAAZC,QAEFK,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAO,UAAAJ,EAASK,aAAT,eAAgBD,OAAQ,IAIrC,OACE,iCACE,mBAAQE,QAJG,kBAAMJ,EAASE,EAAf,EAIX,qBAECd,IACC,SAACR,EAAD,CACEC,IAAG,UAnBS,6BAmBT,iBAA2BO,EAAMiB,aACpCvB,MAAOM,EAAMN,MACbC,KAAMK,EAAMkB,aAAaC,QAAQ,GACjCvB,SAAUI,EAAMJ,SAChBC,OAAQG,EAAMH,OAAOuB,KAAI,qBAAGC,KAAkB,GAArB,OAI7B,4BACE,mDACA,SAAC,KAAD,CAAMN,MAAO,CAAED,KAAAA,GAAQQ,GAAE,kBAAajB,EAAb,SAAzB,mBAGA,SAAC,KAAD,CAAMU,MAAO,CAAED,KAAAA,GAAQQ,GAAE,kBAAajB,EAAb,YAAzB,yBAKF,SAAC,KAAD,MAGL,C,4MEhDKkB,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAsB,mCAAG,oGACbD,IAAAA,IAAA,sCAAyCD,IAD5B,cAC9BG,EAD8B,yBAE7BA,EAASC,MAFoB,2CAAH,qDAKtBC,EAAoB,mCAAG,WAAMC,GAAN,uFACXL,IAAAA,IAAA,gCACID,EADJ,iCACoCM,EADpC,YADW,cAC5BH,EAD4B,yBAI3BA,EAASC,KAAKG,SAJa,2CAAH,sDAOpBvB,EAAqB,mCAAG,WAAMJ,GAAN,uFACZqB,IAAAA,IAAA,iBACXrB,EADW,oBACGoB,EADH,oBADY,cAC7BG,EAD6B,yBAI5BA,EAASC,MAJmB,2CAAH,sDAOrBI,EAAqB,mCAAG,WAAM5B,GAAN,uFACZqB,IAAAA,IAAA,iBACXrB,EADW,4BACWoB,EADX,oBADY,cAC7BG,EAD6B,yBAI5BA,EAASC,KAAKK,MAJc,2CAAH,sDAOrBC,EAAqB,mCAAG,WAAM9B,GAAN,uFACZqB,IAAAA,IAAA,iBACXrB,EADW,4BACWoB,EADX,oBADY,cAC7BG,EAD6B,yBAI5BA,EAASC,KAAKG,SAJc,2CAAH,qD","sources":["components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","hooks/useFetchMovies.js","servises/fetchApiMovies.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const MovieDetails = ({ img, title, vote, overview, genres }) => {\n  return (\n    <div>\n      <div>\n        <img src={img} alt={title} />\n      </div>\n\n      <h2>{title}</h2>\n\n      <p>Vote {vote}</p>\n\n      <h3>Overview</h3>\n      <p>{overview}</p>\n\n      <h3>Genres</h3>\n      <p>{genres}</p>\n    </div>\n  );\n};\n\nMovieDetails.propTypes = {\n  img: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  vote: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.array.isRequired,\n};\n","import {\n  Link,\n  Outlet,\n  useLocation,\n  useParams,\n  useNavigate,\n} from 'react-router-dom';\nimport { useFetchMovies } from '../../hooks/useFetchMovies';\nimport { MovieDetails } from '../../components/MovieDetails/MovieDetails';\n\nconst basePosterUrl = 'https://image.tmdb.org/t/p';\n\nconst MovieDetailsPage = () => {\n  const movie = useFetchMovies();\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const from = location.state?.from || '/';\n\n  const goBack = () => navigate(from);\n\n  return (\n    <>\n      <button onClick={goBack}>Go back</button>\n\n      {movie && (\n        <MovieDetails\n          img={`${basePosterUrl}/w200/${movie.poster_path}`}\n          title={movie.title}\n          vote={movie.vote_average.toFixed(1)}\n          overview={movie.overview}\n          genres={movie.genres.map(({ name }) => name + ' ')}\n        />\n      )}\n\n      <div>\n        <p>Additional information</p>\n        <Link state={{ from }} to={`/movies/${movieId}/cast`}>\n          Cast\n        </Link>\n        <Link state={{ from }} to={`/movies/${movieId}/reviews`}>\n          Reviews\n        </Link>\n      </div>\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchApiMoviesDetails } from '../servises/fetchApiMovies';\n\nexport const useFetchMovies = () => {\n  const [movie, setMovie] = useState(null);\n\n  const params = useParams();\n  const id = params.movieId;\n\n  useEffect(() => {\n    fetchApiMoviesDetails(id).then(setMovie);\n  }, [id]);\n\n  return movie;\n};\n","import axios from 'axios';\n\nconst API_KEY = 'efb495fff3706abe3c98fcab5615ca8d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchApiTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchApiSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`\n  );\n  return response.data.results;\n};\n\nexport const fetchApiMoviesDetails = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchApiMoviesCredits = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchApiMoviesReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["MovieDetails","img","title","vote","overview","genres","src","alt","movie","useState","setMovie","id","useParams","movieId","useEffect","fetchApiMoviesDetails","then","useFetchMovies","location","useLocation","navigate","useNavigate","from","state","onClick","poster_path","vote_average","toFixed","map","name","to","API_KEY","axios","fetchApiTrendingMovies","response","data","fetchApiSearchMovies","query","results","fetchApiMoviesCredits","cast","fetchApiMoviesReviews"],"sourceRoot":""}